# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: "3.0.4"

package:
  name: conda-lock
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/c/conda-lock/conda_lock-${{ version }}.tar.gz
  sha256: 7ba6f8067834b3aae8662ed6316c5f15def431f129ddf423f7957c6181523db6

build:
  number: 1
  noarch: python
  script:
    - ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check
  python:
    entry_points:
      - conda-lock = conda_lock:main

requirements:
  host:
    - python ${{ python_min }}.*
    - hatchling
    - hatch-vcs
    - pip
  run:
    - __${{ noarch_platform }}
    - python >=${{ python_min }}
    - click >=8.0
    - click-default-group
    - ensureconda >=1.4.7
    - filelock
    - gitpython >=3.1.30
    - jinja2
    - packaging >=24.0
    - platformdirs >=3.10.0,<5.0.0
    - pydantic >=2
    - pyyaml >=5.1
    - requests >=2.26,<3.0
    - ruamel.yaml
    - semver >=3,<4
    - setuptools
    - tomli >=2.0.1,<3.0.0
    - tomlkit >=0.11.4,<1.0.0
    - typing_extensions >=4.6.1
    - boltons >=23.0.0
    - charset-normalizer
    - zstandard >=0.15
    - python-build >=1.2.1,<2.0.0
    - cachecontrol >=0.14.0,<0.15.0
    - cachecontrol-with-filecache
    - crashtest >=0.4.1,<0.5.0
    - dulwich >=0.22.6,<0.23.0
    - python-fastjsonschema >=2.18.0,<3.0.0
    - importlib-metadata >=4.4
    - python-installer >=0.7.0,<0.8.0
    - keyring >=25.1.0,<26.0.0
    - pkginfo >=1.12,<2.0
    - pyproject_hooks >=1.0.0,<2.0.0
    - requests-toolbelt >=1.0.0,<2.0.0
    - shellingham >=1.5,<2.0
    - trove-classifiers >=2022.5.19
    - virtualenv >=20.26.6,<21.0.0
    # See https://github.com/conda-forge/poetry-feedstock/blob/main/recipe/meta.yaml
    - ${{ "xattr >=1.0.0,<2.0.0" if noarch_platform == "osx" else "python" }}
  run_constraints:
    - mamba !=2.0.0,!=2.0.1,!=2.0.2,!=2.0.3,!=2.0.4,!=2.0.5,!=2.0.6

tests:
  - python:
      imports: conda_lock
      pip_check: true
      python_version:
        - ${{ python_min }}.*
        - 3.13.*
  - requirements:
      run:
        - python ${{ python_min }}.*
    script:
      - conda-lock --help
      - python -c "assert __import__('conda_lock').__version__ == '${{ version }}'"

about:
  license: |-
    Apache-2.0 AND BSD-2-Clause AND BSD-3-Clause AND ISC AND MIT
  license_file:
    # main project license
    - LICENSE
    # vendored license summary
    - conda_lock/_vendor/LICENSES.md
    # rest of explicit licenses
    - conda_lock/_vendor/cleo/LICENSE
    - conda_lock/_vendor/conda/auxlib/LICENSE
    - conda_lock/_vendor/conda/_vendor/appdirs.LICENSE.txt
    - conda_lock/_vendor/conda/_vendor/distro.LICENSE.txt
    - conda_lock/_vendor/conda/_vendor/frozendict/LICENSE.txt
    - conda_lock/_vendor/conda/_vendor/py_cpuinfo.LICENSE
    - conda_lock/_vendor/conda/LICENSE
    - conda_lock/_vendor/grayskull/LICENSE
    - conda_lock/_vendor/poetry/core/_vendor/fastjsonschema/LICENSE
    - conda_lock/_vendor/poetry/core/_vendor/lark/LICENSE
    - conda_lock/_vendor/poetry/core/_vendor/packaging/LICENSE
    - conda_lock/_vendor/poetry/core/_vendor/tomli/LICENSE
    - conda_lock/_vendor/poetry/LICENSE
  summary: Lightweight lockfile for conda environments
  description: |
    Conda lock is a lightweight library that can be used to generate fully
    reproducible lock files for conda environments.
    It does this by performing multiple solves for conda targeting a set of
    platforms you desire lockfiles for.
    This also has the added benefit of acting as an external presolve for conda
    as the lockfiles it generates results in the conda solver not being invoked
    when installing the packages from the generated lockfile.
  homepage: https://github.com/conda/conda-lock
  documentation: https://conda.github.io/conda-lock

extra:
  recipe-maintainers:
    - maresb
    - mariusvniekerk
    - ocefpaf
    - bollwyvl
